{"version":3,"file":"render.global.js","sources":["../src/shared/draw.ts","../src/utils/mergeCells.ts","../src/render/render.ts"],"sourcesContent":["import { fabric } from \"fabric\";\r\nimport { ILineOptions, IRectOptions } from \"fabric/fabric-impl\";\r\n\r\nexport type StaticCanvas = fabric.StaticCanvas;\r\nexport type Canvas = fabric.Canvas;\r\nexport type Group = fabric.Group;\r\nexport type Rect = fabric.Rect;\r\nexport type Line = fabric.Line;\r\nexport type Text = fabric.Text;\r\nexport type Textbox = fabric.Textbox;\r\n\r\n\r\nexport function createStaticCanvas(container): fabric.StaticCanvas {\r\n    return new fabric.StaticCanvas(container);\r\n}\r\n\r\nexport function createCanvas(container,options?: fabric.ICanvasOptions): fabric.Canvas {\r\n    return new fabric.Canvas(container,options);\r\n}\r\n\r\nexport function createGroup(objects?: fabric.Object[] | undefined, options?: fabric.IGroupOptions | undefined, isAlreadyGrouped?: boolean | undefined): fabric.Group {\r\n    return new fabric.Group(objects,options,isAlreadyGrouped);\r\n}\r\n\r\n\r\nexport function createRect(options:IRectOptions): fabric.Rect {\r\n    return new fabric.Rect(options);\r\n}\r\n\r\nexport function createLine(points?: number[], objObjects?: ILineOptions): fabric.Line {\r\n    return new fabric.Line(points, objObjects);\r\n}\r\n\r\nexport function createText(text: string, options: fabric.ITextOptions): fabric.Text {\r\n    return new fabric.Text(text, options);\r\n}\r\n\r\nexport function createTextbox(text: string, options: fabric.ITextOptions): fabric.Textbox {\r\n    return new fabric.Textbox(text, options);\r\n}","import { createGroup, createRect, createTextbox } from \"../shared\";\r\n\r\nexport function mergeCell(cell:MergeCell, cellWidth, cellHeight) {\r\n    //! 合并单元格格式待完善\r\n    const { startRow, startCol, endRow, endCol } = cell;\r\n    const left = startCol * cellWidth;\r\n    const top = startRow * cellHeight;\r\n    const width = (endCol - startCol + 1) * cellWidth;\r\n    const height = (endRow - startRow + 1) * cellHeight;\r\n\r\n    const rect = createRect({\r\n      left: left,\r\n      top: top,\r\n      width: width,\r\n      height: height,\r\n      fill: \"white\",\r\n      stroke: \"black\",\r\n      strokeWidth: 1,\r\n    });\r\n\r\n    const text = createTextbox(\"Hello\", {\r\n      left: rect.left,\r\n      top: rect.top,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      fill: \"black\",\r\n    });\r\n    const group = createGroup([rect, text]);\r\n    return group;\r\n  }\r\n\r\n  export function createCells(startRow, startCol, endRow, endCol,cellWidth, cellHeight){\r\n    const left = startCol * cellWidth;\r\n    const top = startRow * cellHeight;\r\n    const width = (endCol - startCol + 1) * cellWidth;\r\n    const height = (endRow - startRow + 1) * cellHeight;\r\n\r\n    const rect = createRect({\r\n      left: left,\r\n      top: top,\r\n      width: width,\r\n      height: height,\r\n      fill: \"white\",\r\n      stroke: \"black\",\r\n      strokeWidth: 1,\r\n      lockMovementX : true,\r\n      lockMovementY : true,\r\n    });\r\n\r\n    const text = createTextbox(`${startRow},${startCol}`, {\r\n      left: rect.left,\r\n      top: rect.top,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      lockMovementX : true,\r\n      lockMovementY : true,\r\n      fill: \"black\",\r\n    });\r\n    const group = createGroup([rect, text]);\r\n    return group;\r\n  }\r\n\r\n  type MergeCell = {\r\n    startRow: number;\r\n    startCol: number;\r\n    endRow: number;\r\n    endCol: number;\r\n  };","import { fabric } from \"fabric\";\r\nimport {\r\n  createStaticCanvas,\r\n  createCanvas,\r\n  createGroup,\r\n  createRect,\r\n  createLine,\r\n  createText,\r\n  createTextbox,\r\n} from \"../shared\";\r\n\r\nimport type {\r\n  StaticCanvas,\r\n  Canvas,\r\n  Group,\r\n  Rect,\r\n  Line,\r\n  Text,\r\n  Textbox,\r\n} from \"../shared\";\r\nimport { mergeCell } from \"../utils\";\r\nimport { createCells } from \"../utils/mergeCells\";\r\n\r\nexport class Table {\r\n  private canvas: Canvas;\r\n  private cellWidth: number;\r\n  private cellHeight: number;\r\n  private row: number;\r\n  private col: number;\r\n  private cellGroups: Group[] = [];\r\n  private mergeGroup: Group[] = [];\r\n  private mergeCells: MergeCell[] = [];\r\n  private startX: number = Number.MAX_SAFE_INTEGER;\r\n  private startY: number = Number.MAX_SAFE_INTEGER;\r\n  private endX: number = Number.MIN_SAFE_INTEGER;\r\n  private endY: number = Number.MIN_SAFE_INTEGER;\r\n  constructor(row: number, col: number, container: string,mergeCells: MergeCell[]) {\r\n    this.canvas = createCanvas(container);\r\n    this.cellWidth = 120;\r\n    this.cellHeight = 40;\r\n    this.row = row;\r\n    this.col = col;\r\n    this.mergeCells = mergeCells;\r\n    this.canvas.selection = true;\r\n    this.canvas.on(\"mouse:down\", (e) => {\r\n      this.resetBgc();\r\n      this.startX = Number.MAX_SAFE_INTEGER;\r\n      this.endX = Number.MIN_SAFE_INTEGER;\r\n      this.startY = Number.MAX_SAFE_INTEGER;\r\n      this.endY = Number.MIN_SAFE_INTEGER;\r\n      this.canvas.on(\"mouse:move\", this.mouseMove);\r\n    });\r\n    this.canvas.on(\"mouse:up\", (e) => {\r\n      this.canvas.off(\"mouse:move\", this.mouseMove);\r\n    });\r\n  }\r\n\r\n  private mouseMove = (e) => {\r\n    let minX =\r\n      Number(Math.floor(e.pointer.x / this.cellWidth)) * this.cellWidth;\r\n    let maxX = Number(Math.ceil(e.pointer.x / this.cellWidth)) * this.cellWidth;\r\n    let minY =\r\n      Number(Math.floor(e.pointer.y / this.cellHeight)) * this.cellHeight;\r\n    let maxY =\r\n      Number(Math.ceil(e.pointer.y / this.cellHeight)) * this.cellHeight;\r\n    console.log(minX, maxX, minY, maxY);\r\n\r\n    this.startX = Math.min(minX, this.startX);\r\n    this.endX = Math.max(maxX, this.endX);\r\n    this.startY = Math.min(minY, this.startY);\r\n    this.endY = Math.max(maxY, this.endY);\r\n\r\n    this.cellGroups.forEach((group) => {\r\n      const rect = group.getObjects()[0] as fabric.Rect;\r\n      if (\r\n        group.left >= this.startX &&\r\n        group.left + this.cellWidth <= this.endX &&\r\n        group.top >= this.startY &&\r\n        group.top + this.cellHeight <= this.endY\r\n      ) {\r\n        rect.set(\"fill\", \"rgba(0,0,0,0.5)\"); // 给矩形添加红色背景\r\n      }\r\n    });\r\n    this.reRender(); \r\n  };\r\n\r\n  private resetBgc() {\r\n    this.cellGroups.forEach((group) => {\r\n      const rect = group.getObjects()[0] as fabric.Rect;\r\n      if (\r\n        group.left >= this.startX &&\r\n        group.left + this.cellWidth <= this.endX &&\r\n        group.top >= this.startY &&\r\n        group.top + this.cellHeight <= this.endY\r\n      ) {\r\n        rect.set(\"fill\", \"white\"); // 给矩形添加红色背景\r\n      }\r\n    });\r\n  }\r\n\r\n  public initMaskTable() {\r\n    const totalHeight = this.row * this.cellHeight;\r\n    const totalWidth = this.col * this.cellWidth;\r\n\r\n    for (let i = 0; i < this.row; i++) {\r\n      for (let j = 0; j < this.col; j++) {\r\n        const cellGroup = createCells(\r\n          i,\r\n          j,\r\n          i,\r\n          j,\r\n          this.cellWidth,\r\n          this.cellHeight\r\n        );\r\n        this.cellGroups.push(cellGroup);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  private merge(): Table {\r\n    this.mergeCells.forEach((cell) => {\r\n      const group = mergeCell(cell, this.cellWidth, this.cellHeight);\r\n      this.mergeGroup.push(group);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  public render() {\r\n    this.merge();\r\n    this.canvas.add.apply(this.canvas, [\r\n      ...this.cellGroups,\r\n      ...this.mergeGroup,\r\n    ]);\r\n   \r\n    this.canvas.renderAll();\r\n    this.canvas.getObjects().forEach((obj) => {\r\n      obj.lockMovementX = true;\r\n      obj.lockMovementY = true;\r\n    });\r\n    //! 创建一个覆盖层？\r\n    //   const overlayCanvasContainer = document.createElement(\"canvas\");\r\n    //   overlayCanvasContainer.setAttribute(\"id\", \"overlay-cotnainer\");\r\n    //   let canvasContainer = document.getElementById(\"container\")\r\n    //     .parentNode as HTMLElement;\r\n    //   canvasContainer.appendChild(overlayCanvasContainer);\r\n    //   overlayCanvasContainer.style.position = \"absolute\";\r\n    //   overlayCanvasContainer.style.top = canvasContainer.offsetTop + \"px\";\r\n    //   overlayCanvasContainer.style.left = canvasContainer.offsetLeft + \"px\";\r\n    //   // 创建一个 fabric.Canvas 实例，覆盖在已有的 canvas 上\r\n\r\n    //   setTimeout(() => {\r\n    //     let overlayCanvas = createCanvas(\"overlay-cotnainer\",{\r\n    //       selection: true,\r\n    //       width: this.cellWidth * this.col,\r\n    //       height: this.cellHeight * this.row,\r\n    //     });\r\n\r\n    //     overlayCanvas.setBackgroundColor(\"rgba(0,0,0,0)\", function () {\r\n    //       overlayCanvas.renderAll();\r\n    //     });\r\n    //   },100);\r\n    // }\r\n  }\r\n\r\n  private reRender(){\r\n    this.canvas.renderAll()\r\n  }\r\n}\r\n\r\ntype MergeCell = {\r\n  startRow: number;\r\n  startCol: number;\r\n  endRow: number;\r\n  endCol: number;\r\n};\r\n"],"names":["fabric"],"mappings":"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"}